@page "/Account/Login"
@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Identity
@using AutoPartsAP1.Data

@inject SignInManager<ApplicationUser> SignInManager
@inject ILogger<Login> Logger
@inject NavigationManager NavigationManager
@inject IdentityRedirectManager RedirectManager

<PageTitle>Log in</PageTitle>
<div class="container vh-100 d-flex justify-content-center align-items-center">
	<div class="row w-100 justify-content-center">
		<div class="col-lg-6 col-md-8 col-sm-10">

			<section class="login-container p-4 shadow rounded">
				<div class="text-center mb-4">
					<i class="fas fa-crow fa-3x"></i>
					<h1 class="fw-bold mt-2">AutoParts</h1>
				</div>

				<h2 class="titulo text-center mb-4">Inicio de sesi&oacute;n</h2>

				<EditForm Model="Input" OnValidSubmit="LoginUser" FormName="login">
					<DataAnnotationsValidator />
					<ValidationSummary class="text-danger" />

					<div class="mb-3">
						<label for="Input.Email" class="form-label">Correo Electr&oacute;nico</label>
						<InputText @bind-Value="Input.Email" id="Input.Email" class="form-control form-control-lg" placeholder="Correo Electr&oacute;nico " />
						<ValidationMessage For="() => Input.Email" class="text-danger" />
					</div>

					<div class="mb-3">
						<label for="Input.Password" class="form-label">Clave</label>
						<InputText type="password" @bind-Value="Input.Password" id="Input.Password" class="form-control form-control-lg" placeholder="Clave" />
						<ValidationMessage For="() => Input.Password" class="text-danger" />
					</div>

					<div class="form-check mb-4">
						<InputCheckbox @bind-Value="Input.RememberMe" class="form-check-input" id="rememberMe" />
						<label class="form-check-label" for="rememberMe">Recordarme</label>
					</div>

					<button type="submit" class="btn btn-primary btn-lg w-100 mb-3">Iniciar</button>

					<div class="d-flex justify-content-between mt-4">
						<p class="text-center">
							¿Olvid&oacute; su clave?
							<a class="link-primary" href="Account/ForgotPassword">Click Aqu&iacute;</a>
						</p>

						<p class="text-center">
							¿No tiene una cuenta?
							<a class="link-primary" href="@NavigationManager.GetUriWithQueryParameters("Account/Register", new Dictionary<string, object?> { ["ReturnUrl"] = ReturnUrl })">
								Reg&iacute;strese
							</a>
						</p>
					</div>
				</EditForm>
			</section>

		</div>
	</div>
</div>
@code {
	private string? errorMessage;

	[CascadingParameter]
	private HttpContext HttpContext { get; set; } = default!;

	[SupplyParameterFromForm]
	private InputModel Input { get; set; } = new();

	[SupplyParameterFromQuery]
	private string? ReturnUrl { get; set; }

	protected override async Task OnInitializedAsync()
	{
		if (HttpMethods.IsGet(HttpContext.Request.Method))
		{
			await HttpContext.SignOutAsync(IdentityConstants.ExternalScheme);
		}
	}

	public async Task LoginUser()
	{
		var result = await SignInManager.PasswordSignInAsync(Input.Email, Input.Password, Input.RememberMe, lockoutOnFailure: false);
		if (result.Succeeded)
		{
			Logger.LogInformation("User logged in.");
			RedirectManager.RedirectTo("/");
		}
		else if (result.RequiresTwoFactor)
		{
			RedirectManager.RedirectTo("Account/LoginWith2fa", new() { ["returnUrl"] = ReturnUrl, ["rememberMe"] = Input.RememberMe });
		}
		else if (result.IsLockedOut)
		{
			Logger.LogWarning("User account locked out.");
			RedirectManager.RedirectTo("Account/Lockout");
		}
		else
		{
			errorMessage = "Error: Invalid login attempt.";
		}
	}

	private sealed class InputModel
	{
		[Required]
		[EmailAddress]
		public string Email { get; set; } = "";

		[Required]
		[DataType(DataType.Password)]
		public string Password { get; set; } = "";

		[Display(Name = "Remember me?")]
		public bool RememberMe { get; set; }
	}
}
