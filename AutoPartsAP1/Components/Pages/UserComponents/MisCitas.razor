@page "/miscitas"
@inject CitaService citaservices
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager navigationmanager
@rendermode InteractiveServer

<PageTitle>Mis Citas</PageTitle>
<NavCentral></NavCentral>

<div class="row">
    <div class="col-lg-3 mb-4">
        <div class="card shadow-sm border-0 rounded-4">
            <div class="card-body px-3 py-4">
                <ManageNavMenu />
            </div>
        </div>
    </div>
    <div class="col-lg-9">
        <div class="card shadow-sm border-0 rounded-4">
            <div class="card-body p-4">
                <div class="container py-5">
                    <h2 class="text-center fw-bold mb-4">Mis Citas Agendadas</h2>
                    <div class="row justify-content-center">
                        <div class="col-lg-8">
                            @if (citas == null)
                            {
                                <div class="d-flex justify-content-center">
                                    <div class="spinner-border text-primary" role="status">
                                        <span class="visually-hidden">Cargando...</span>
                                    </div>
                                </div>
                            }
                            else if (!citas.Any())
                            {
                                <div class="alert alert-primary text-center">
                                    <p class="mb-0">No tienes citas agendadas.</p>
                                </div>
                            }
                            else
                            {
                                <div class="accordion" id="citasAccordion">
                                    @foreach (var cita in citas)
                                    {
                                        <div class="accordion-item mb-3 shadow-sm">
                                            <h2 class="accordion-header" id="heading@(cita.CitaId)">
                                                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapse@(cita.CitaId)" aria-expanded="false">
                                                    <span class="fw-bold me-auto">@cita.ServicioSolicitado</span>
                                                    <span class="text-muted">@cita.FechaCita.ToShortDateString()</span>
                                                </button>
                                            </h2>
                                            <div id="collapse@(cita.CitaId)" class="accordion-collapse collapse" data-bs-parent="#citasAccordion">
                                                <div class="accordion-body">
                                                    <p><strong>Código de Confirmación:</strong> <span class="fw-bold text-success">@cita.CodigoConfirmacion</span></p>
                                                    <p><strong>Fecha y Hora:</strong> @cita.FechaCita.ToString("dd/MM/yyyy HH:mm")</p>
                                                    <p><strong>Estado:</strong> @(cita.Confirmada ? "Confirmada" : "Pendiente de servicio")</p>
                                                    <p class="mt-3">
                                                        <small class="text-muted">
                                                            Por favor, muestre este código a su llegada para recibir el servicio.
                                                        </small>
                                                    </p>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </div>
                            }
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>

<NavInferior></NavInferior>
@code {
    private List<Cita> citas;
    private string userId;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity.IsAuthenticated)
        {
            userId = user.Claims.FirstOrDefault(c => c.Type == "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier")?.Value;
            if (!string.IsNullOrEmpty(userId))
            {
                citas = await citaservices.GetCitasPorUsuarioIdAsync(userId);
            }
        }
    }
}