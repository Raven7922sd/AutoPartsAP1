@inherits OwningComponentBase<CarritoService>
@inject ProductoService productoservice
@inject CarritoService carritoservice
@inject NavigationManager navigationmanager
@inject IToastService itoastservice
@inject AuthenticationStateProvider authStateProvider
@rendermode InteractiveServer

<nav class="navbar navbar-expand-lg navbar-dark bg-dark shadow-sm">
    <div class="container">
        <a class="navbar-brand fw-bold text-white" href="/">
            <img src="/AutoParts.png" alt="Logo de AutoParts" style="height: 90px;" />
        </a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent">
            <span class="navbar-toggler-icon"></span>
        </button>


        <div class="collapse navbar-collapse" id="navbarSupportedContent">
            <ul class="navbar-nav me-auto mb-2 mb-lg-0 ms-lg-4">
                <li class="nav-item">
                    <a class="nav-link text-white active" href="/">Inicio</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link text-white" href="Nosotros">Nosotros</a>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle text-white" id="navbarDropdown" href="#" role="button" data-bs-toggle="dropdown">
                        Tienda
                    </a>
                    <ul class="dropdown-menu">
                        <li><a class="dropdown-item" href="/Lista/Productos">Todos los productos</a></li>
                        <li><a class="dropdown-item" href="/servicios/detalles">Servicios</a></li>
                    </ul>
                </li>
            </ul>

            <form class="d-flex align-items-center gap-3">
                <button class="btn btn-outline-light" @onclick="NavigateToAccount" type="button">
                    <i class="bi-person-circle me-1"></i> Mi cuenta
                </button>
                <AuthorizeView><Authorized><LogOutButton CssClass="btn btn-outline-light" LabelText="Cerrar Sesi&oacute;n" IconClass="bi-box-arrow-left" /></Authorized></AuthorizeView>
                <button class="btn btn-outline-light position-relative" @onclick="NavigateToCart" type="button">
                    <i class="bi-cart-fill me-1"></i> Carrito
                    <span class="badge bg-danger text-white ms-1 rounded-pill position-absolute top-0 start-100 translate-middle">
                        @CarritoConteo
                    </span>
                </button>
            </form>
        </div>
    </div>
</nav>

@code {
    public List<Productos> ListaProductos { get; set; } = new List<Productos>();
    public List<Servicios> ListaServicios { get; set; } = new List<Servicios>();
    private int CarritoConteo = 0;
    private string resultado = "";

    protected override async Task OnInitializedAsync()
    {
        ListaProductos = await productoservice.Listar(c => c.ProductoId > 0);
        carritoservice.OnCartChanged += ActualizarCarrito;
        ActualizarCarrito();
    }

    public void Dispose()
    {
        carritoservice.OnCartChanged -= ActualizarCarrito;
    }

    private async Task AñadirCarrito(Productos producto)
    {
        var exito = await carritoservice.AddItemConValidacionAsync(producto.ProductoId, 1);
        if (!exito)
        {
            itoastservice.ShowError("No hay suficiente stock para agregar este producto.");
        }
        else
        {
            itoastservice.ShowSuccess("Producto agregado al carrito.");
        }
    }

    private void ActualizarCarrito()
    {
        CarritoConteo = carritoservice.GetTotalItems();
        StateHasChanged();
    }

    private void NavigateToCart()
    {
        navigationmanager.NavigateTo("/Carrito");
    }

    private void NavigateToAccount()
    {
        navigationmanager.NavigateTo("/Account/Manage");
    }
}
