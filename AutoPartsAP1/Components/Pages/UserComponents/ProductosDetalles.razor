@page "/Productos/Detalles/{ProductoId:int}"
@rendermode InteractiveServer
@inject NavigationManager NavigationManager
@inject ProductoService productoservice
@inject CarritoService carritoservice
@inject IToastService itoastservice

<div class="container my-5">
    @if (isLoading)
    {
        <div class="text-center">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Cargando...</span>
            </div>
        </div>
    }
    else if (producto == null)
    {
        <div class="alert alert-warning" role="alert">
            Producto no encontrado.
        </div>
    }
    else
    {
        <div class="card shadow-lg border-0 rounded-4">
            <div class="card-body p-4 p-md-5">
                <div class="row g-4 align-items-center">
                    <div class="col-md-6">
                        <img src="@(producto.ProductoImagenUrl ?? "https://placehold.co/800x600/dee2e6/6c757d?text=No+Imagen+Disponible")"
                             class="img-fluid rounded-3 shadow-sm"
                             alt="@producto.ProductoNombre" />
                    </div>

                    <div class="col-md-6">
                        <h1 class="fw-bold mb-2">@producto.ProductoNombre</h1>

                        <p class="text-muted fs-5">@producto.Categoria</p>

                        <p class="fs-4 text-primary fw-bold mb-3">
                            RD$@producto.ProductoMonto.ToString("N2", CultureInfo.GetCultureInfo("es-DO"))
                        </p>

                        <div class="d-flex align-items-center mb-4">
                            <span class="badge rounded-pill bg-@(producto.ProductoCantidad > 5 ? "success" : "danger") me-3 fs-6">
                                @(producto.ProductoCantidad > 0 ? $"Stock: {producto.ProductoCantidad}" : "Agotado")
                            </span>
                        </div>

                        <p class="text-muted mb-4">
                            @producto.ProductoDescripcion
                        </p>

                        <div class="d-flex gap-3">
                            <button class="btn btn-outline-primary btn-lg flex-grow-1"
                                    @onclick="() => AñadirCarrito(producto)"
                                    disabled="@(producto.ProductoCantidad <= 0)">
                                <i class="bi bi-cart-plus me-2"></i> Añadir al carrito
                            </button>
                            <button class="btn btn-outline-secondary btn-lg" @onclick="Volver">
                                <i class="bi bi-arrow-left me-2"></i> Volver
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@code {
    [Parameter]
    public int ProductoId { get; set; }

    private Productos? producto;
    private bool isLoading = true;

    private int CarritoConteo = 0;

    protected override async Task OnInitializedAsync()
    {
        isLoading = true;

        var productosEncontrados = await productoservice.Listar(p => p.ProductoId == ProductoId);
        producto = productosEncontrados.FirstOrDefault();

        if (producto == null)
        {
            NavigationManager.NavigateTo("/");
        }

        ActualizarCarrito();
        carritoservice.OnCartChanged += ActualizarCarrito;

        isLoading = false;
    }

    public void Dispose()
    {
        carritoservice.OnCartChanged -= ActualizarCarrito;
    }

    private async Task AñadirCarrito(Productos productoSeleccionado)
    {
        if (productoSeleccionado == null) return;

        var exito = await carritoservice.AddItemConValidacionAsync(productoSeleccionado.ProductoId, 1);
        if (!exito)
        {
            itoastservice.ShowError("No hay suficiente stock para agregar este producto.");
        }
        else
        {
            itoastservice.ShowSuccess("Producto agregado al carrito.");
        }
    }

    private void ActualizarCarrito()
    {
        CarritoConteo = carritoservice.GetTotalItems();
        StateHasChanged();
    }

    private void Volver()
    {
        NavigationManager.NavigateTo("/");
    }
}