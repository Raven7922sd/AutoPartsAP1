@page "/Ventas/Index"
@inject ProductoService productoservices
@inject VentasService ventaService
@inject NavigationManager navigationmanager
@rendermode InteractiveServer
@inject IToastService toastService
@attribute [Authorize]
@attribute [Authorize(Roles = "Admin")]


<PageTitle>Ventas</PageTitle>

<div class="container py-4">
    <div class="card shadow-lg rounded-4 border-0">
        <div class="card-header bg-primary text-white text-center py-3 rounded-top-4">
            <h4 class="mb-0"><i class="bi bi-cash-coin me-2"></i> Consulta de Ventas</h4>
        </div>

        <div class="card-body p-4">
            <h5 class="mb-3 text-primary"><i class="bi bi-funnel-fill me-2"></i> Filtros de Búsqueda</h5>
            <div class="row g-3 mb-4">
                <div class="col-md-3">
                    <label class="form-label fw-bold">Filtrar por</label>
                    <InputSelect class="form-select" @bind-Value="Filtro">
                        <option value="" selected disabled>Seleccione una opción</option>
                        <option value="VentaId">Id</option>
                        <option value="Usuario">Usuario</option>
                        <option value="Producto">Producto</option>
                        <option value="Monto">Total</option>
                        <option value="Dirección">Direcci&oacute;n</option>
                        <option value="Uso General">Categoría: "Uso General"</option>
                        <option value="Motocicletas">Categoría: "Motocicletas"</option>
                        <option value="Autos o Vehículos Ligeros">Categoría: "Vehículos Ligeros"</option>
                        <option value="Vehículos Pesados">Categoría: "Vehículos Pesados"</option>
                    </InputSelect>
                </div>

                <div class="col-md-3">
                    <label class="form-label fw-bold">Buscador</label>
                    <div class="input-group">
                        <input class="form-control" @bind-value="ValorFiltro" @oninput="FiltroCambiado" placeholder="Buscar..." />
                        <button type="button" class="btn btn-primary" @onclick="Buscar">
                            <i class="bi bi-search"></i>
                        </button>
                    </div>
                </div>

                <div class="col-md-3">
                    <label class="form-label fw-bold">Fecha Desde</label>
                    <div class="input-group">
                        <span class="input-group-text bg-light"><i class="bi bi-calendar-date"></i></span>
                        <input type="date" @bind="FechaDesde" class="form-control" />
                    </div>
                </div>

                <div class="col-md-3">
                    <label class="form-label fw-bold">Fecha Hasta</label>
                    <div class="input-group">
                        <span class="input-group-text bg-light"><i class="bi bi-calendar-date-fill"></i></span>
                        <input type="date" class="form-control" @bind-value="FechaHasta" />
                    </div>
                </div>
            </div>

            <hr class="mb-4">

            <div class="table-responsive">
                <table class="table table-striped table-hover table-bordered align-middle">
                    <thead class="bg-primary text-white">
                        <tr>
                            <th scope="col">ID Venta</th>
                            <th scope="col">Usuario</th>
                            <th scope="col">Producto</th>
                            <th scope="col">Categoría</th>
                            <th scope="col" class="text-center">Cantidad</th>
                            <th scope="col" class="text-end">Precio</th> 
                            <th scope="col" class="text-end">Direcci&oacute;n</th>
                            <th scope="col">Fecha</th>
                            <th scope="col" class="text-center">Acciones</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (ResultadoPaginado != null && ResultadoPaginado.Items != null)
                        {
                            @foreach (var ventas in ResultadoPaginado.Items)
                            {
                                @if (ventas.VentasDetalles != null && ventas.VentasDetalles.Any())
                                {
                                    @foreach (var detalle in ventas.VentasDetalles)
                                    {
                                        <tr>
                                            @if (detalle == ventas.VentasDetalles.First())
                                            {
                                                <td rowspan="@ventas.VentasDetalles.Count()">@ventas.VentaId</td>
                                                <td rowspan="@ventas.VentasDetalles.Count()">@ventas.Usuario.Email</td>
                                            }

                                            <td>@detalle.Producto.ProductoNombre</td>
                                            <td>@detalle.Producto.Categoria</td>
                                            <td class="text-center">@detalle.Cantidad</td>
                                            <td class="text-end">@(detalle.Producto.ProductoMonto.ToString("C") ?? "0.00")</td>

                                            @if (detalle == ventas.VentasDetalles.First())
                                            {
                                                <td rowspan="@ventas.VentasDetalles.Count()">
                                                    @(ventas.VentasDetalles.FirstOrDefault()?.Pago?.Direccion ?? "N/A")
                                                </td>
                                                <td rowspan="@ventas.VentasDetalles.Count()">@ventas.Fecha.ToString("dd/MM/yyyy")</td>
                                                <td rowspan="@ventas.VentasDetalles.Count()" class="text-center">
                                                    <a href="Ventas/Edit/@ventas.VentaId" class="btn btn-outline-primary btn-sm" title="Editar">
                                                        <i class="bi bi-pencil-square"></i>
                                                    </a>
                                                </td>
                                            }
                                        </tr>
                                    }
                                    <tr class="table-primary">
                                        <td colspan="5" class="text-end fw-bold">Total Venta:</td>
                                        <td class="text-end fw-bold">@(ventas.Total.ToString("C") ?? "0.00")</td>
                                        <td colspan="2"></td>
                                    </tr>
                                }
                            }
                        }
                    </tbody>
                </table>
            </div>

            @if (ResultadoPaginado != null && ResultadoPaginado.TotalPaginas > 1)
            {
                <nav aria-label="Paginación">
                    <ul class="pagination justify-content-center mt-4">
                        <li class="page-item @(ResultadoPaginado.TienePaginaAnterior ? "" : "disabled")">
                            <button class="page-link" @onclick="() => CambiarPagina(PaginaActual - 1)" tabindex="-1" aria-disabled="@(ResultadoPaginado.TienePaginaAnterior ? "false" : "true")">Anterior</button>
                        </li>

                        @for (int i = 1; i <= ResultadoPaginado.TotalPaginas; i++)
                        {
                            <li class="page-item @(i == PaginaActual ? "active" : "")">
                                <button class="page-link" @onclick="() => CambiarPagina(i)">@i</button>
                            </li>
                        }

                        <li class="page-item @(ResultadoPaginado.TienePaginaSiguiente ? "" : "disabled")">
                            <button class="page-link" @onclick="() => CambiarPagina(PaginaActual + 1)">Siguiente</button>
                        </li>
                    </ul>
                </nav>
            }
        </div>
    </div>
</div>

@code {
	private PaginacionResultado<Ventas> ResultadoPaginado { get; set; }
	private int PaginaActual { get; set; } = 1;
	private const int TamañoPagina = 5;
	private CancellationTokenSource? _cts;
	public string Filtro { get; set; } = string.Empty;
	public string ValorFiltro { get; set; } = string.Empty;
	public DateTime? FechaDesde { get; set; }
	public DateTime? FechaHasta { get; set; }

	protected override async Task OnInitializedAsync()
	{
		await CargarPagina(PaginaActual);
	}

	private async Task Buscar()
	{
		PaginaActual = 1;
		await CargarPagina(PaginaActual);
	}

	private async Task FiltroCambiado(ChangeEventArgs e)
	{
		ValorFiltro = e.Value?.ToString() ?? string.Empty;

		_cts?.Cancel();
		_cts = new CancellationTokenSource();

		try
		{
			await Task.Delay(400, _cts.Token);

			await Buscar();
			StateHasChanged();
		}
		catch (TaskCanceledException)
		{
		}
	}

    private async Task CargarPagina(int pagina)
    {
        DateTime? fechaHastaAjustada = FechaHasta?.Date.AddDays(1).AddTicks(-1);

        ResultadoPaginado = await ventaService.BuscarVentasAsync(
            Filtro,
            ValorFiltro,
            FechaDesde,
            fechaHastaAjustada,
            pagina,
            TamañoPagina);

        PaginaActual = pagina;
    }


	private async Task CambiarPagina(int nuevaPagina)
	{
		if (nuevaPagina >= 1 && nuevaPagina <= ResultadoPaginado.TotalPaginas)
		{
			await CargarPagina(nuevaPagina);
		}
	}
}