@page "/Productos/Create"
@using Blazored.Toast.Services
@using AutoPartsAP1.Components.Models;
@using Microsoft.AspNetCore.Components.Forms
@inject ProductoService ProductosService
@inject NavigationManager navigationmanager
@inject IToastService itoastservice
@rendermode InteractiveServer
@attribute [Authorize]
@attribute [Authorize(Roles = "Admin")]


<PageTitle>Crear Producto</PageTitle>

<EditForm Model="productos" OnValidSubmit="Guardar" FormName="Create">
    <DataAnnotationsValidator />

    <div class="container py-4">
        <div class="text-center mb-4">
            <h2 class="fw-bold text-primary">
                <i class="bi bi-box-seam me-2"></i> Crear Nuevo Producto
            </h2>
            <p class="text-muted">Completa el formulario para registrar un nuevo producto en el sistema.</p>
        </div>

        <div class="card shadow-sm rounded-4 border-0">
            <div class="card-body p-4">
                <div class="row g-4">
                    <div class="col-md-7">
                        <h5 class="mb-3 text-secondary">
                            <i class="bi bi-info-circle me-2"></i> Detalles del Producto
                        </h5>
                        <div class="row g-3">
                            <div class="col-12">
                                <label class="form-label fw-bold">ID del Producto</label>
                                <InputNumber class="form-control" @bind-Value="productos.ProductoId" readonly />
                            </div>

                            <div class="col-12">
                                <label class="form-label fw-bold">Nombre</label>
                                <InputText class="form-control" @bind-Value="productos.ProductoNombre" placeholder="Escribe el nombre del producto" />
                                <ValidationMessage For="(() => productos.ProductoNombre)" />
                            </div>

                            <div class="col-12">
                                <label class="form-label fw-bold">Descripción</label>
                                <InputTextArea class="form-control" @bind-Value="productos.ProductoDescripcion" placeholder="Añade una descripción detallada" rows="3" />
                                <ValidationMessage For="(() => productos.ProductoDescripcion)" />
                            </div>

                            <div class="col-md-6">
                                <label class="form-label fw-bold">Monto (Precio)</label>
                                <InputNumber class="form-control" step="0.01" @bind-Value="productos.ProductoMonto" placeholder="0.00" />
                                <ValidationMessage For="(() => productos.ProductoMonto)" />
                            </div>

                            <div class="col-md-6">
                                <label class="form-label fw-bold">Cantidad (Stock)</label>
                                <InputNumber class="form-control" @bind-Value="productos.ProductoCantidad" placeholder="0" />
                                <ValidationMessage For="(() => productos.ProductoCantidad)" />
                            </div>

                            <div class="col-12">
                                <label class="form-label fw-bold">Categoría</label>
                                <InputSelect class="form-select" @bind-Value="productos.Categoria">
                                    <option value="" disabled selected>Selecciona una categoría</option>
                                    <option value="Uso General">Uso General</option>
                                    <option value="Motocicletas">Motocicletas</option>
                                    <option value="Autos o Vehículos Ligeros">Autos o Vehículos Ligeros</option>
                                    <option value="Vehículos Pesados">Vehículos Pesados</option>
                                </InputSelect>
                                <ValidationMessage For="(()=>productos.Categoria)" />
                            </div>
                        </div>
                    </div>

                    <div class="col-md-5 d-flex flex-column align-items-center">
                        <h5 class="mb-3 text-secondary">
                            <i class="bi bi-image me-2"></i> Imagen del Producto
                        </h5>
                        <div class="card p-3 w-100 rounded-4" style="border: 2px dashed #e9ecef; height: 100%;">
                            <div class="d-flex flex-column justify-content-center align-items-center h-100">
                                @if (productos.ProductoImagen != null)
                                {
                                    <img src="data:image/png;base64,@Convert.ToBase64String(productos.ProductoImagen)"
                                         class="img-fluid rounded-3 mb-3" alt="Imagen del producto"
                                         style="max-height: 250px; object-fit: contain; max-width: 100%;" />
                                }
                                else
                                {
                                    <div class="text-center text-muted mb-3">
                                        <i class="bi bi-image-fill" style="font-size: 5rem;"></i>
                                        <p class="mt-2">No hay imagen seleccionada</p>
                                    </div>
                                }
                                <InputFile OnChange="SubirImagen" accept=".jpg,.jpeg,.png,.gif" class="form-control mt-auto" />
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="card-footer bg-light text-center py-3 rounded-bottom-4">
                <div class="btn-group" role="group">
                    <button type="button" class="btn btn-outline-primary d-flex align-items-center" @onclick="Nuevo">
                        <i class="bi bi-arrow-counterclockwise me-2"></i> Limpiar
                    </button>
                    <button type="submit" class="btn btn-outline-success d-flex align-items-center">
                        <i class="bi bi-save me-2"></i> Guardar
                    </button>
                    <a href="/Productos/Index" class="btn btn-outline-secondary d-flex align-items-center">
                        <i class="bi bi-arrow-left me-2"></i> Volver
                    </a>
                </div>
            </div>
        </div>
    </div>
</EditForm>

@code {
    private Productos productos { get; set; } = new Productos();
    private IBrowserFile? selectedImageFile;

    public void Nuevo()
    {
        productos = new Productos();
        selectedImageFile = null;
    }

    private async Task SubirImagen(InputFileChangeEventArgs e)
    {
        selectedImageFile = e.File;

        if (selectedImageFile != null)
        {
            if (selectedImageFile.Size > 5 * 1024 * 1024)
            {
                itoastservice.ShowError("La imagen no debe exceder los 5MB.");
                selectedImageFile = null;
                productos.ProductoImagen = null;
                return;
            }

            try
            {
                using var stream = new MemoryStream();
                await selectedImageFile.OpenReadStream(maxAllowedSize: 5 * 1024 * 1024).CopyToAsync(stream);
                productos.ProductoImagen = stream.ToArray();
            }
            catch (Exception ex)
            {
                itoastservice.ShowError($"Error al cargar la imagen: {ex.Message}");
                selectedImageFile = null;
                productos.ProductoImagen = null;
            }
        }
        else
        {
            productos.ProductoImagen = null;
        }
    }

    public async Task Guardar()
    {
        if (productos == null)
        {
            itoastservice.ShowError("Error interno: El producto es nulo.");
            return;
        }
        var guardo = await ProductosService.Guardar(productos);

        if (guardo)
        {
            itoastservice.ShowSuccess("Producto guardado correctamente");
            navigationmanager.NavigateTo("/Productos/Index");
            Nuevo();
        }
        else
        {
            itoastservice.ShowError("Error al almacenar el producto");
        }
    }
}